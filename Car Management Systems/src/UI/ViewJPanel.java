/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.util.ArrayList;
import javax.crypto.AEADBadTagException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.CarConfiguration;
import model.CarDetails;
import model.CarHistory;

/**
 *
 * @author Vini
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    CarHistory history;
    CarConfiguration carConfiguration;
    //private Object txtSearch;
    public ViewJPanel(CarHistory history, CarConfiguration carConfiguration) {
        initComponents();
        this.history = history;
        this.carConfiguration = carConfiguration;
       populateTable();
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblListView = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CarList = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnBookCar = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        txtManufact = new javax.swing.JTextField();
        txtManufacDate = new javax.swing.JTextField();
        txtNumSeats = new javax.swing.JTextField();
        txtSerialNo = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        lblManufacturer = new javax.swing.JLabel();
        lblDateManufactured = new javax.swing.JLabel();
        lblMaxNoSeats = new javax.swing.JLabel();
        lblSerialNo = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtCerti = new javax.swing.JTextField();
        lblCarName = new javax.swing.JLabel();
        lblCertificate = new javax.swing.JLabel();
        txtCarName = new javax.swing.JTextField();
        btnData = new javax.swing.JButton();
        lblAvail = new javax.swing.JLabel();
        txtAvail = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();

        lblListView.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblListView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblListView.setText("View Car List");

        CarList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Car Name", "Certificate Expired", "Manufacturer", "Year of Manufacture", "No of Seats", "Serial Number", "City", "Availability"
            }
        ));
        jScrollPane1.setViewportView(CarList);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBookCar.setText("Book Car");
        btnBookCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookCarActionPerformed(evt);
            }
        });

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        lblSearch.setText("Search by Car Name or Manufacturer or Availability or Certificate status or City:");

        txtManufact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtManufactKeyPressed(evt);
            }
        });

        txtSerialNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSerialNoKeyTyped(evt);
            }
        });

        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCityKeyTyped(evt);
            }
        });

        lblManufacturer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblManufacturer.setText("Manufacturer");

        lblDateManufactured.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDateManufactured.setText("Year of Manufactured");

        lblMaxNoSeats.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblMaxNoSeats.setText("No of Seats");

        lblSerialNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblSerialNo.setText("Serial Number");

        lblCity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCity.setText("City");

        txtCerti.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCertiKeyPressed(evt);
            }
        });

        lblCarName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCarName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblCarName.setText("Car Name");

        lblCertificate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCertificate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblCertificate.setText("Certificate");

        txtCarName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarNameActionPerformed(evt);
            }
        });
        txtCarName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCarNameKeyPressed(evt);
            }
        });

        btnData.setText("Import Data");
        btnData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataActionPerformed(evt);
            }
        });

        lblAvail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblAvail.setText("Availability");

        txtAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAvailActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblListView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(lblSearch)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(268, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCertificate)
                                    .addComponent(lblCarName, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCarName, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                                    .addComponent(txtCerti)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(16, 16, 16)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblDateManufactured)
                                                    .addComponent(lblManufacturer)
                                                    .addComponent(lblMaxNoSeats)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(59, 59, 59)
                                                .addComponent(lblSerialNo)))
                                        .addGap(13, 13, 13))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCity, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblAvail, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCity)
                                    .addComponent(txtNumSeats, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtManufacDate, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtManufact)
                                    .addComponent(txtSerialNo)
                                    .addComponent(txtAvail)))
                            .addComponent(btnUpdate))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnData)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBookCar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblListView)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBookCar)
                    .addComponent(btnView)
                    .addComponent(btnDelete)
                    .addComponent(btnData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCarName)
                            .addComponent(txtCarName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCertificate)
                            .addComponent(txtCerti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txtManufact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblManufacturer))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateManufactured)
                    .addComponent(txtManufacDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMaxNoSeats)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSerialNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSerialNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCity))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAvail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAvail))
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(47, 47, 47))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = CarList.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select Row to delete");
            return;
        
        }
        DefaultTableModel model =(DefaultTableModel)CarList.getModel();
    CarDetails selectCar = (CarDetails) model.getValueAt(selectedRowIndex, 0);
    history.deleteCar(selectCar);
    JOptionPane.showMessageDialog(this,"Car deleted");
     populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = CarList.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select Row to view");
            return;
        
        }
        DefaultTableModel model =(DefaultTableModel)CarList.getModel();
    CarDetails selectCar = (CarDetails) model.getValueAt(selectedRowIndex, 0);
    txtCarName.setText(selectCar.getCarName());
    txtCity.setText(selectCar.getCity());
    txtCerti.setText(selectCar.getCertificate());
    txtManufacDate.setText(selectCar.getManufacturedDate());
    txtManufact.setText(selectCar.getManufacturer());
    txtNumSeats.setText(String.valueOf(selectCar.getSerialNo()));
    txtSerialNo.setText(String.valueOf(selectCar.getSerialNo()));
    txtAvail.setText(selectCar.getAvail());
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
         DefaultTableModel model =(DefaultTableModel)CarList.getModel();
         TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
         CarList.setRowSorter(tr);
         tr.setRowFilter(RowFilter.regexFilter(txtSearch.getText().trim()));
    }//GEN-LAST:event_txtSearchKeyPressed

    private void btnBookCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookCarActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = CarList.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select Car to book");
            return;
        
        }
        DefaultTableModel model =(DefaultTableModel)CarList.getModel();
    CarDetails selectCar = (CarDetails) model.getValueAt(selectedRowIndex, 0);
    history.addNewCar(selectCar);
    JOptionPane.showMessageDialog(this,"Thank you for booking the car.");
    populateTable();
      
    }//GEN-LAST:event_btnBookCarActionPerformed

    private void txtManufactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManufactKeyPressed
        // TODO add your handling code here:
        char aphabets =evt.getKeyChar();
        if(Character.isLetter(aphabets)||Character.isWhitespace(aphabets)||Character.isISOControl(aphabets)){
            txtManufact.setEditable(true);
        }
        else{
            txtManufact.setEditable(false);
        }
    }//GEN-LAST:event_txtManufactKeyPressed

    private void txtSerialNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerialNoKeyTyped
        // TODO add your handling code here:
        char c =evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
            txtSerialNo.setEditable(true);
        }
    }//GEN-LAST:event_txtSerialNoKeyTyped

    private void txtCityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyTyped
        // TODO add your handling code here:
        char c =evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
            txtCity.setEditable(true);
        }
    }//GEN-LAST:event_txtCityKeyTyped

    private void txtCertiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCertiKeyPressed
        char aphabets =evt.getKeyChar();
        if(Character.isLetter(aphabets)||Character.isWhitespace(aphabets)||Character.isISOControl(aphabets)){
            txtCerti.setEditable(true);
        }
        else{
            txtCerti.setEditable(false);
        }
    }//GEN-LAST:event_txtCertiKeyPressed

    private void txtCarNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCarNameKeyPressed
        char aphabets =evt.getKeyChar();
        if(Character.isLetter(aphabets)||Character.isWhitespace(aphabets)||Character.isISOControl(aphabets)){
            txtCarName.setEditable(true);
        }
        else{
            txtCarName.setEditable(false);
        }
    }//GEN-LAST:event_txtCarNameKeyPressed

    private void txtCarNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarNameActionPerformed

    private void btnDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataActionPerformed
        // TODO add your handling code here:
        populateCarTable(carConfiguration,"all");
              //populateTable();  
    }//GEN-LAST:event_btnDataActionPerformed

    private void txtAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAvailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAvailActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
       DefaultTableModel model =(DefaultTableModel)CarList.getModel();
       if(CarList.getSelectedRowCount()== 1){
           String carName = txtCarName.getText();
        String Certificate = txtCerti.getText();
        String Manufacturer = txtManufact.getText();
        String manufacturedDate = txtManufacDate.getText();;
        int maxSeats =(Integer.valueOf( txtNumSeats.getText()));
        int serialNo = (Integer.valueOf(txtSerialNo.getText()));
        String city =(txtCity.getText());
        String Avail = txtAvail.getText();
       
        model.setValueAt(carName, CarList.getSelectedRow(), 0);
        model.setValueAt(Certificate, CarList.getSelectedRow(), 1);
        model.setValueAt(Manufacturer, CarList.getSelectedRow(), 2);
        model.setValueAt(manufacturedDate, CarList.getSelectedRow(), 3);
        model.setValueAt(maxSeats, CarList.getSelectedRow(), 4);
        model.setValueAt(serialNo, CarList.getSelectedRow(), 5);
        model.setValueAt(city, CarList.getSelectedRow(), 6);
        model.setValueAt(Avail, CarList.getSelectedRow(), 7);
        
        JOptionPane.showMessageDialog(this, "Details Updated Successfully");
        
       }else{
           if(CarList.getRowCount()== 0){
             JOptionPane.showMessageDialog(this, "Table Empty");  
           }else{
               JOptionPane.showMessageDialog(this, "Please select row for update");
           }
       }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CarList;
    private javax.swing.JButton btnBookCar;
    private javax.swing.JButton btnData;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvail;
    private javax.swing.JLabel lblCarName;
    private javax.swing.JLabel lblCertificate;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDateManufactured;
    private javax.swing.JLabel lblListView;
    private javax.swing.JLabel lblManufacturer;
    private javax.swing.JLabel lblMaxNoSeats;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSerialNo;
    private javax.swing.JTextField txtAvail;
    private javax.swing.JTextField txtCarName;
    private javax.swing.JTextField txtCerti;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtManufacDate;
    private javax.swing.JTextField txtManufact;
    private javax.swing.JTextField txtNumSeats;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSerialNo;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
    DefaultTableModel model =(DefaultTableModel)CarList.getModel();
    model.setRowCount(0);
    for(CarDetails cd : history.getHistory()){
       Object row[] = new Object[8];
            
            row[0] = cd;
            row[1] = cd.getCertificate();
            row[2] = cd.getManufacturer();
            row[3] = cd.getManufacturedDate();
            row[4] = cd.getMaxSeats();
            row[5] = cd.getSerialNo();
            row[6] = cd.getCity();
            row[7] = cd.getAvail();
            model.addRow(row);
    }
    }

private void populateCarTable(CarConfiguration history, String all) {
    DefaultTableModel model =(DefaultTableModel)CarList.getModel();
    model.setRowCount(0);
    for(CarDetails cd : history.getHistory()){
        if(cd.getCarName().equals(all) || all.equals("all")){
       Object row[] = new Object[8];
            
            row[0] = cd;
            row[1] = cd.getCertificate();
            row[2] = cd.getManufacturer();
            row[3] = cd.getManufacturedDate();
            row[4] = cd.getMaxSeats();
            row[5] = cd.getSerialNo();
            row[6] = cd.getCity();
            row[7] = cd.getAvail();
            model.addRow(row);
        }
    }
    }
    

}
